---
swagger: "2.0"
info:
  description: "#### S-ProvFlow provenance api Provenance framework for storage\n\
    and access of data-intensive streaming lineage. It offers a a web API and a range\n\
    of dedicated visualisation tools and a provenance model (S-PROV) which utilises\n\
    and extends PROV and ProvONE models\n"
  version: "1.0.0"
  title: "Provenance Store"
host: "prov.knmi.nl"
basePath: "/"
schemes:
- "http"
paths:
  /:
    get:
      summary: "def hello():"
      operationId: "root_get"
      parameters: []
      responses:
        200:
          description: "GET /"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /activities/{runId}:
    get:
      summary: "def activitiesHandler(runId):"
      operationId: "activities_run_id_get"
      parameters:
      - name: "runId"
        in: "path"
        description: "runId"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /activities/{runId}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /components/{compid}:
    get:
      summary: "def getComponentDetails(compid):"
      operationId: "components_compid_get"
      parameters:
      - name: "compid"
        in: "path"
        description: "compid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /components/{compid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /data:
    get:
      summary: "def getData():"
      operationId: "data_get"
      parameters: []
      responses:
        200:
          description: "GET /data"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /data/{data_id}/export:
    get:
      summary: "def _exportDataProvenance(data_id):"
      operationId: "data_data_id_export_get"
      parameters:
      - name: "data_id"
        in: "path"
        description: "data_id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /data/{data_id}/export"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /dataGranuleTerms:
    get:
      summary: "def getDataGranuleTerms():"
      operationId: "data_granule_terms_get"
      parameters: []
      responses:
        200:
          description: "GET /dataGranuleTerms"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /derivedData/{id}:
    get:
      summary: "def derivedData(id):"
      operationId: "derived_data_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /derivedData/{id}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /entities/{method}:
    get:
      summary: "def getEntitiesByMethod(method):"
      operationId: "entities_method_get"
      parameters:
      - name: "method"
        in: "path"
        description: "method"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /entities/{method}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      operationId: "entities_method_post"
      parameters:
      - name: "method"
        in: "path"
        description: "method"
        required: true
        type: "string"
      responses:
        200:
          description: "POST /entities/{method}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /instances/{instid}:
    get:
      summary: "def getInstanceDetails(instid): "
      operationId: "instances_instid_get"
      parameters:
      - name: "instid"
        in: "path"
        description: "instid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /instances/{instid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /invocations/{invocid}:
    get:
      summary: "def getInvocationDetails(invocid):"
      operationId: "invocations_invocid_get"
      parameters:
      - name: "invocid"
        in: "path"
        description: "invocid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /invocations/{invocid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /solver/{solver_id}:
    get:
      summary: "def getSolver(solver_id):"
      operationId: "solver_solver_id_get"
      parameters:
      - name: "solver_id"
        in: "path"
        description: "solver_id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /solver/{solver_id}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /summaries/collaborative:
    get:
      summary: "def summariesHandlerCollab():"
      operationId: "summaries_collaborative_get"
      parameters: []
      responses:
        200:
          description: "GET /summaries/collaborative"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /summaries/workflowexecution:
    get:
      summary: "def summariesHandlerWorkflow():"
      operationId: "summaries_workflowexecution_get"
      parameters: []
      responses:
        200:
          description: "GET /summaries/workflowexecution"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /wasDerivedFrom/{id}:
    get:
      summary: "def wasDerivedFrom(id):"
      operationId: "was_derived_from_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /wasDerivedFrom/{id}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/:
    get:
      summary: "def workflowsHandler():"
      operationId: "workflow_get"
      parameters: []
      responses:
        200:
          description: "GET /workflow/"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/delete/{runid}:
    post:
      operationId: "workflow_delete_runid_post"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "POST /workflow/delete/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/edit/{runid}:
    post:
      operationId: "workflow_edit_runid_post"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "POST /workflow/edit/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/export/data/{id}:
    get:
      summary: "def exportDataProvenance(id):"
      operationId: "workflow_export_data_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflow/export/data/{id}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/export/{runid}:
    get:
      summary: "def exportRunProvenance(runid):"
      operationId: "workflow_export_runid_get"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflow/export/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/insert:
    post:
      operationId: "workflow_insert_post"
      parameters: []
      responses:
        200:
          description: "POST /workflow/insert"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/summaries:
    get:
      summary: "def summariesHandler():"
      operationId: "workflow_summaries_get"
      parameters: []
      responses:
        200:
          description: "GET /workflow/summaries"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/user/{user}:
    get:
      summary: "def getUserRuns(user):"
      operationId: "workflow_user_user_get"
      parameters:
      - name: "user"
        in: "path"
        description: "user"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflow/user/{user}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflow/{runid}:
    get:
      summary: "def workflowInfoHandler(runid):"
      operationId: "workflow_runid_get"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflow/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      operationId: "workflow_runid_delete"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "DELET /workflow/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecution/{run_id}/export:
    get:
      summary: "def _exportRunProvenance(run_id):"
      operationId: "workflowexecution_run_id_export_get"
      parameters:
      - name: "run_id"
        in: "path"
        description: "run_id"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflowexecution/{run_id}/export"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions:
    get:
      summary: "def getWorkflowExecutions():"
      operationId: "workflowexecutions_get"
      parameters: []
      responses:
        200:
          description: "GET /workflowexecutions"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/insert:
    post:
      operationId: "workflowexecutions_insert_post"
      parameters: []
      responses:
        200:
          description: "POST /workflowexecutions/insert"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/{runid}:
    get:
      summary: "def getWorkflowInfo(runid):"
      operationId: "workflowexecutions_runid_get"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflowexecutions/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      operationId: "workflowexecutions_runid_delete"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "DELET /workflowexecutions/{runid}"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/{runid}/delete:
    post:
      operationId: "workflowexecutions_runid_delete_post"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "POST /workflowexecutions/{runid}/delete"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/{runid}/edit:
    post:
      operationId: "workflowexecutions_runid_edit_post"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "POST /workflowexecutions/{runid}/edit"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/{runid}/instances:
    get:
      summary: "def getInstancesMonitoring(runid):"
      operationId: "workflowexecutions_runid_instances_get"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflowexecutions/{runid}/instances"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /workflowexecutions/{runid}/showactivity:
    get:
      summary: "def getMonitoring(runid):"
      operationId: "workflowexecutions_runid_showactivity_get"
      parameters:
      - name: "runid"
        in: "path"
        description: "runid"
        required: true
        type: "string"
      responses:
        200:
          description: "GET /workflowexecutions/{runid}/showactivity"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions: {}
